# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.models.replace_connection_request_options_one_of1 import ReplaceConnectionRequestOptionsOneOf1

class TestReplaceConnectionRequestOptionsOneOf1(unittest.TestCase):
    """ReplaceConnectionRequestOptionsOneOf1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReplaceConnectionRequestOptionsOneOf1:
        """Test ReplaceConnectionRequestOptionsOneOf1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReplaceConnectionRequestOptionsOneOf1`
        """
        model = ReplaceConnectionRequestOptionsOneOf1()
        if include_optional:
            return ReplaceConnectionRequestOptionsOneOf1(
                home_realm_domains = ["@kinde.com","@kinde.io"],
                saml_entity_id = 'https://kinde.com',
                saml_acs_url = 'https://kinde.com/saml/acs',
                saml_idp_metadata_url = 'https://kinde.com/saml/metadata',
                saml_email_key_attr = 'email',
                saml_first_name_key_attr = 'given_name',
                saml_last_name_key_attr = 'family_name',
                is_create_missing_user = True,
                saml_signing_certificate = '-----BEGIN CERTIFICATE-----
MIIDdTCCAl2gAwIBAgIEUjZoyDANBgkqhkiG9w0BAQsFADBzMQswCQYDVQQGEwJVUzELMAkGA1UECAwCQ0ExEjAQBgNVBAcMCVNhbiBGcmFuYzEXMBUGA1UECgwOQ2xv
-----END CERTIFICATE-----',
                saml_signing_private_key = '-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCy5+KLjTzF6tvl
-----END PRIVATE KEY-----'
            )
        else:
            return ReplaceConnectionRequestOptionsOneOf1(
        )
        """

    def testReplaceConnectionRequestOptionsOneOf1(self):
        """Test ReplaceConnectionRequestOptionsOneOf1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
