# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.models.get_feature_flags_response import GetFeatureFlagsResponse

class TestGetFeatureFlagsResponse(unittest.TestCase):
    """GetFeatureFlagsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetFeatureFlagsResponse:
        """Test GetFeatureFlagsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetFeatureFlagsResponse`
        """
        model = GetFeatureFlagsResponse()
        if include_optional:
            return GetFeatureFlagsResponse(
                data = kinde_sdk.models.get_feature_flags_response_data.get_feature_flags_response_data(
                    feature_flags = [
                        kinde_sdk.models.get_feature_flags_response_data_feature_flags_inner.get_feature_flags_response_data_feature_flags_inner(
                            id = 'flag_0195ac80a14e8d71f42b98e75d3c61ad', 
                            name = 'new_feature', 
                            key = 'new_feature_key', 
                            type = 'boolean', 
                            value = true, )
                        ], )
            )
        else:
            return GetFeatureFlagsResponse(
        )
        """

    def testGetFeatureFlagsResponse(self):
        """Test GetFeatureFlagsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
