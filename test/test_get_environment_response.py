# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.models.get_environment_response import GetEnvironmentResponse

class TestGetEnvironmentResponse(unittest.TestCase):
    """GetEnvironmentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetEnvironmentResponse:
        """Test GetEnvironmentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetEnvironmentResponse`
        """
        model = GetEnvironmentResponse()
        if include_optional:
            return GetEnvironmentResponse(
                code = 'OK',
                message = 'success_response',
                environment = kinde_sdk.models.get_environment_response_environment.get_environment_response_environment(
                    code = 'production', 
                    name = 'Production', 
                    hotjar_site_id = '404009', 
                    google_analytics_tag = 'G-1234567', 
                    is_default = True, 
                    is_live = True, 
                    kinde_domain = 'example.kinde.com', 
                    custom_domain = 'app.example.com', 
                    logo = 'https://yoursubdomain.kinde.com/logo?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d', 
                    logo_dark = 'https://yoursubdomain.kinde.com/logo_dark?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d', 
                    favicon_svg = 'https://yoursubdomain.kinde.com/favicon_svg?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d', 
                    favicon_fallback = 'https://yoursubdomain.kinde.com/favicon_fallback?org_code=org_1ccfb819462&cache=311308b8ad3544bf8e572979f0e5748d', 
                    link_color = kinde_sdk.models.get_environment_response_environment_link_color.get_environment_response_environment_link_color(
                        raw = '#0056F1', 
                        hex = '#0056F1', 
                        hsl = 'hsl(220, 100%, 50%)', ), 
                    background_color = kinde_sdk.models.get_environment_response_environment_background_color.get_environment_response_environment_background_color(
                        raw = '#ffffff', 
                        hex = '#ffffff', 
                        hsl = 'hsl(0, 0%, 100%)', ), 
                    button_color = kinde_sdk.models.get_environment_response_environment_link_color.get_environment_response_environment_link_color(
                        raw = '#0056F1', 
                        hex = '#0056F1', 
                        hsl = 'hsl(220, 100%, 50%)', ), 
                    button_text_color = kinde_sdk.models.get_environment_response_environment_background_color.get_environment_response_environment_background_color(
                        raw = '#ffffff', 
                        hex = '#ffffff', 
                        hsl = 'hsl(0, 0%, 100%)', ), 
                    link_color_dark = , 
                    background_color_dark = , 
                    button_text_color_dark = , 
                    button_color_dark = , 
                    button_border_radius = 8, 
                    card_border_radius = 16, 
                    input_border_radius = 4, 
                    theme_code = 'light', 
                    color_scheme = 'light', 
                    created_on = '2021-01-01T00:00:00Z', )
            )
        else:
            return GetEnvironmentResponse(
        )
        """

    def testGetEnvironmentResponse(self):
        """Test GetEnvironmentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
