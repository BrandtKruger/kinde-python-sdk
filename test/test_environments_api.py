# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.api.environments_api import EnvironmentsApi


class TestEnvironmentsApi(unittest.TestCase):
    """EnvironmentsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = EnvironmentsApi()

    def tearDown(self) -> None:
        pass

    def test_add_logo(self) -> None:
        """Test case for add_logo

        Add logo
        """
        pass

    def test_delete_environement_feature_flag_override(self) -> None:
        """Test case for delete_environement_feature_flag_override

        Delete Environment Feature Flag Override
        """
        pass

    def test_delete_environement_feature_flag_overrides(self) -> None:
        """Test case for delete_environement_feature_flag_overrides

        Delete Environment Feature Flag Overrides
        """
        pass

    def test_delete_logo(self) -> None:
        """Test case for delete_logo

        Delete logo
        """
        pass

    def test_get_environement_feature_flags(self) -> None:
        """Test case for get_environement_feature_flags

        List Environment Feature Flags
        """
        pass

    def test_get_environment(self) -> None:
        """Test case for get_environment

        Get environment
        """
        pass

    def test_read_logo(self) -> None:
        """Test case for read_logo

        Read logo details
        """
        pass

    def test_update_environement_feature_flag_override(self) -> None:
        """Test case for update_environement_feature_flag_override

        Update Environment Feature Flag Override
        """
        pass


if __name__ == '__main__':
    unittest.main()
