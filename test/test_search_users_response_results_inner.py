# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.models.search_users_response_results_inner import SearchUsersResponseResultsInner

class TestSearchUsersResponseResultsInner(unittest.TestCase):
    """SearchUsersResponseResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchUsersResponseResultsInner:
        """Test SearchUsersResponseResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchUsersResponseResultsInner`
        """
        model = SearchUsersResponseResultsInner()
        if include_optional:
            return SearchUsersResponseResultsInner(
                id = 'kp_0ba7c433e5d648cf992621ce99d42817',
                provided_id = 'U123456',
                email = 'user@domain.com',
                username = 'john.snow',
                last_name = 'Snow',
                first_name = 'John',
                is_suspended = True,
                picture = 'https://example.com/john_snow.jpg',
                total_sign_ins = 1,
                failed_sign_ins = 0,
                last_signed_in = '2025-02-12T18:02:23.614638+00:00',
                created_on = '2025-02-12T18:02:23.614638+00:00',
                organizations = [
                    ''
                    ],
                identities = [
                    kinde_sdk.models.user_identities_inner.user_identities_inner(
                        type = '', 
                        identity = '', )
                    ],
                properties = {
                    'key' : ''
                    }
            )
        else:
            return SearchUsersResponseResultsInner(
        )
        """

    def testSearchUsersResponseResultsInner(self):
        """Test SearchUsersResponseResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
