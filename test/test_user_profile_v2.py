# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.models.user_profile_v2 import UserProfileV2

class TestUserProfileV2(unittest.TestCase):
    """UserProfileV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserProfileV2:
        """Test UserProfileV2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserProfileV2`
        """
        model = UserProfileV2()
        if include_optional:
            return UserProfileV2(
                sub = 'kp_c3143a4b50ad43c88e541d9077681782',
                provided_id = 'some_external_id',
                name = 'John Snow',
                given_name = 'John',
                family_name = 'Snow',
                updated_at = 1612345678,
                email = 'john.snow@example.com',
                email_verified = True,
                picture = 'https://example.com/john_snow.jpg',
                preferred_username = 'john_snow',
                id = 'kp_c3143a4b50ad43c88e541d9077681782'
            )
        else:
            return UserProfileV2(
        )
        """

    def testUserProfileV2(self):
        """Test UserProfileV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
