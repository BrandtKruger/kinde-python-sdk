# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.models.get_business_response import GetBusinessResponse

class TestGetBusinessResponse(unittest.TestCase):
    """GetBusinessResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetBusinessResponse:
        """Test GetBusinessResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetBusinessResponse`
        """
        model = GetBusinessResponse()
        if include_optional:
            return GetBusinessResponse(
                code = 'OK',
                message = 'Success',
                business = kinde_sdk.models.get_business_response_business.get_business_response_business(
                    code = 'bus_c69fb73b091', 
                    name = 'Tailsforce Ltd', 
                    phone = '555-555-5555', 
                    email = 'sally@example.com', 
                    industry = 'Healthcare & Medical', 
                    timezone = 'Los Angeles (Pacific Standard Time)', 
                    privacy_url = 'https://example.com/privacy', 
                    terms_url = 'https://example.com/terms', 
                    has_clickwrap = False, 
                    has_kinde_branding = True, 
                    created_on = '2021-01-01T00:00:00Z', )
            )
        else:
            return GetBusinessResponse(
        )
        """

    def testGetBusinessResponse(self):
        """Test GetBusinessResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
