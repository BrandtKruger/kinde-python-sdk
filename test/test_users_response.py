# coding: utf-8

"""
    Kinde Management API

     Provides endpoints to manage your Kinde Businesses.  ## Intro  ## How to use  1. [Set up and authorize a machine-to-machine (M2M) application](https://docs.kinde.com/developer-tools/kinde-api/connect-to-kinde-api/).  2. [Generate a test access token](https://docs.kinde.com/developer-tools/kinde-api/access-token-for-api/)  3. Test request any endpoint using the test token 

    The version of the OpenAPI document: 1
    Contact: support@kinde.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from kinde_sdk.models.users_response import UsersResponse

class TestUsersResponse(unittest.TestCase):
    """UsersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsersResponse:
        """Test UsersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsersResponse`
        """
        model = UsersResponse()
        if include_optional:
            return UsersResponse(
                code = '',
                message = '',
                users = [
                    kinde_sdk.models.users_response_users_inner.users_response_users_inner(
                        id = '', 
                        provided_id = '', 
                        email = '', 
                        phone = '', 
                        username = '', 
                        last_name = '', 
                        first_name = '', 
                        is_suspended = True, 
                        picture = '', 
                        total_sign_ins = 56, 
                        failed_sign_ins = 56, 
                        last_signed_in = '', 
                        created_on = '', 
                        organizations = [
                            ''
                            ], 
                        identities = [
                            kinde_sdk.models.user_identities_inner.user_identities_inner(
                                type = '', 
                                identity = '', )
                            ], )
                    ],
                next_token = ''
            )
        else:
            return UsersResponse(
        )
        """

    def testUsersResponse(self):
        """Test UsersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
